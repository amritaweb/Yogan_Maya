.form {
	&-group:not(:last-child) {
		margin-bottom: 2rem;
	}

	&-group button {
		margin-top: 1rem;
		@include respond(tab-port) {
			margin-top: 4rem;
		}
	}

	&-input {
		font-size: 1.5rem;
		//input elements don't inherit font family or color.
		font-family: inherit;
		color: inherit;
		padding: 1.5rem 2rem;
		border-radius: 2px;
		background-color: rgba($color-white, 0.5);
		border: none;
		border-bottom: 3px solid transparent;
		width: 90%;
		display: block;
		transition: all 0.3s;

		@include respond(tab-port) {
			width: 100%;
		}

		&:focus {
			outline: none;
			box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
			border-bottom: 3px solid $color-primary-dark;
		}

		&:focus:invalid {
			border-bottom: 3px solid $color-secondary-darker;
		}

		&::-webkit-input-placeholder {
			color: $color-grey-dark;
		}
	}
	&-label {
		//display block to use box model properties on it
		font-size: 1.2rem;
		font-weight: 700;
		margin-left: 2rem;
		margin-top: 0.7rem;
		display: block;
		transition: all 0.3s;
	}
	//here we are hiding the label when the placeholder text is shown.
	//we are selecting input element when the placeholder is shown and then we select its next sibling (label) which we style when placeholder is shown:

	&-input:placeholder-shown + &-label {
		opacity: 0;
		visibility: hidden;
		//initial state, label is higher up, to create moving down animation:
		transform: translateY(-4rem);
	}

	// we use the sibling selector because input and label are at the same level. Here we use the adjacent sibling selector.
	//when placehoolder is shown (we have written nothing in our input), we want the label to be hidden.
	//we use opacity because we want to animate the affect.
	//this did not work so TO DO: use Javascript
	&-input:placehoder-shown + &-label {
		opacity: 0;
		visibility: hidden;
		transform: translateY(-4rem);
	}

	&-radio-group {
		display: flex;

		@include respond(tab-port) {
			margin-bottom: 4rem;
			flex-direction: column;
		}
	}

	&-group-1 {
		margin-right: 4rem;
	}

	&-radio-input {
		display: none;
	}

	&-radio-label {
		font-size: $default-font-size;
		cursor: pointer;
		position: relative;
		padding-left: 4.5rem;
	}

	&-radio-button {
		height: 3rem;
		width: 3rem;
		border: 5px solid $color-primary;
		border-radius: 50%;
		display: inline-block;
		position: absolute;
		left: 0;
		top: -0.4rem;

		&::after {
			content: '';
			display: block;
			height: 1.3rem;
			width: 1.3rem;
			border-radius: 50%;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			background-color: $color-primary;
			opacity: 0;
			transition: opacity 0.2s;
		}
	}
	// as soon as we hit the label element radio input because checked.
	// select the sibling of that one and then the child as we want to change each time radio input selected.
	&-radio-input:checked ~ &-radio-label &-radio-button::after {
		opacity: 1;
	}
}
